local ran_ok, error = pcall(function() local kpse = require('kpse') kpse.set_program_name('luatex') local lfs = require("lfs") local cacheDir = "./_markdown_Index" if lfs.isdir(cacheDir) == true then else assert(lfs.mkdir(cacheDir)) end local md = require("markdown") local convert = md.new({cacheDir = "./_markdown_Index", citations = true, definitionLists = true, fencedCode = true, hashEnumerators = true, hybrid = true, inlineFootnotes = true, outputDir = ".", smartEllipses = true, } ) local input = assert(io.open("Index.markdown.in","r")):read("*a") print(convert(input:gsub("\r\n?", "\n"))) end) if not ran_ok then local file = io.open("./Index.markdown.err", "w") if file then file:write(error .. "\n") file:close() end print('\\markdownError{An error was encountered while executing Lua code}{For further clues, examine the file "./Index.markdown.err"}') end
